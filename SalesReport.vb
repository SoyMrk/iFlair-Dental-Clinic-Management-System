Imports System.ComponentModel
Imports System.IO
Imports Excel = Microsoft.Office.Interop.Excel
Public Class SalesReport

    Private Sub btnGenerateReport_Click(sender As Object, e As EventArgs) Handles btnGenerateReport.Click


        If rbDaily.Checked = False And rbMonthly.Checked = False And rbWeekly.Checked = False And grpboxDateRange.Visible = False Then
            MessageBox.Show("Please Set a Filter", "Information", MessageBoxButtons.OK, MessageBoxIcon.Information)
            Exit Sub
        End If

        clearReportsPanel()

        With GeneratedReport
            .WindowState = FormWindowState.Maximized
            .Dock = DockStyle.Fill And DockStyle.Bottom
            .AutoSize = True
            .TopLevel = False
            pnlSalesReport.Controls.Add(GeneratedReport)
            .BringToFront()
            .Show()
        End With

    End Sub

    Private Sub btnExcel_Click(sender As Object, e As EventArgs) Handles btnExcel.Click
        exportToExcel()
    End Sub

    Public Sub exportToExcel()

        Dim StartUpPath As String = Application.StartupPath

        Dim xlsFiles As String = desktopPath + "\Dental Clinic Management System\Reports\SalesReports\"
        Dim xlsTemplates As String

        If StartUpPath.Contains("bin") Then
            xlsTemplates = StartUpPath.Replace("\bin\Debug\net6.0-windows\", "\Templates\")
        Else
            xlsTemplates = StartUpPath + "\Templates\"
        End If


        'MsgBox(xlsTemplates)
        'MsgBox(xlsFiles)

        If grpboxDateRange.Visible = True Then

            If btnProcedureFilter.Visible = True Then ' WITH NO PROCEDURE

                Dim xlsApp As Excel.Application
                Dim xlsWB As Excel.Workbook
                Dim xlsSheet As Excel.Worksheet

                xlsApp = New Excel.Application

                xlsApp.Visible = False
                xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                xlsSheet = xlsWB.Worksheets(1)
                xlsSheet.Unprotect("flair")

                Dim totalSales As Integer = 0
                Dim totalBalance As Integer = 0
                Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                xlsSheet.Cells(3, 1) = "DENTAL SALES REPORT"


                xlsSheet.Cells(5, 1) = "Starts Date: "
                xlsSheet.Cells(6, 1) = "Ends Date: "

                xlsSheet.Cells(7, 1) = "Filter: "
                xlsSheet.Cells(7, 2) = "All Procedures"

                xlsSheet.Cells(5, 2) = DateFrom
                xlsSheet.Cells(6, 2) = ToDate

                Dim x As Integer
                Dim currentRow As Integer = 12
                For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                    xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                    xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                    xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                    xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                    xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                    xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                    totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                    totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                    currentRow += 1

                Next

                xlsSheet.Cells(8, 2) = totalSales
                xlsSheet.Cells(9, 2) = totalBalance

                'MsgBox(totalSales)
                'MsgBox(totalBalance)
                'MsgBox(DateFrom)
                'MsgBox(ToDate)

                xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                With xlsSheet.Range("A12", "F" & currentRow - 1)
                    .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                    .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                End With

                xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                xlsApp.ActiveWindow.DisplayGridlines = False

                Dim myfilename As String = "SalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                xlsSheet.Protect("flair")

                xlsWB.SaveAs(xlsFiles & myfilename)
                xlsApp.Quit()

                releaseObject(xlsApp)
                releaseObject(xlsWB)
                releaseObject(xlsSheet)

                'MsgBox(xlsFiles & myfilename)
                'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                'Process.Start(startInfo)

                If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                    Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                    Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                Else

                    MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                End If

            Else 'WITH A PROCEDURE

                Dim xlsApp As Excel.Application
                Dim xlsWB As Excel.Workbook
                Dim xlsSheet As Excel.Worksheet

                xlsApp = New Excel.Application

                xlsApp.Visible = False
                xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                xlsSheet = xlsWB.Worksheets(1)
                xlsSheet.Unprotect("flair")

                Dim totalSales As Integer = 0
                Dim totalBalance As Integer = 0
                Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                xlsSheet.Cells(3, 1) = cmbboxProcedure.Text & "Dental Sales Report"


                xlsSheet.Cells(5, 1) = "Starts Date: "
                xlsSheet.Cells(6, 1) = "Ends Date: "

                xlsSheet.Cells(7, 1) = "Filter: "
                xlsSheet.Cells(7, 2) = cmbboxProcedure.Text

                xlsSheet.Cells(5, 2) = DateFrom
                xlsSheet.Cells(6, 2) = ToDate

                Dim x As Integer
                Dim currentRow As Integer = 12
                For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                    xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                    xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                    xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                    xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                    xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                    xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                    totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                    totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                    currentRow += 1

                Next

                xlsSheet.Cells(8, 2) = totalSales
                xlsSheet.Cells(9, 2) = totalBalance

                'MsgBox(totalSales)
                'MsgBox(totalBalance)
                'MsgBox(DateFrom)
                'MsgBox(ToDate)

                xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                With xlsSheet.Range("A12", "F" & currentRow - 1)
                    .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                    .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                End With

                Dim myfilename As String = cmbboxProcedure.Text & "ProcedureSalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                xlsSheet.Protect("flair")

                xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                xlsApp.ActiveWindow.DisplayGridlines = False

                xlsWB.SaveAs(xlsFiles & myfilename)
                xlsApp.Quit()

                releaseObject(xlsApp)
                releaseObject(xlsWB)
                releaseObject(xlsSheet)

                'MsgBox(xlsFiles & myfilename)
                'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                'Process.Start(startInfo)

                If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                    Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                    Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                Else

                    MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                End If

            End If



        Else

            If rbDaily.Checked = True Then

                If btnProcedureFilter.Visible = True Then 'WITH NO PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "DAILY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = "All Procedures"


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "DailySalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                Else 'WITH PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "DAILY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = cmbboxProcedure.Text


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "DailyProcedureSalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                End If

            ElseIf rbMonthly.Checked = True Then

                If btnProcedureFilter.Visible = True Then 'WITH NO PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "MONTHLY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = "All Procedures"


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "MonthlySalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                Else 'WITH PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "MONTHLY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = cmbboxProcedure.Text


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "MonthlyProcedureSalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                End If


            ElseIf rbWeekly.Checked = True Then

                If btnProcedureFilter.Visible = True Then 'WITH NO PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "WEEKLY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = "All Procedures"


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "WeeklySalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                Else 'WITH PROCEDURE

                    Dim xlsApp As Excel.Application
                    Dim xlsWB As Excel.Workbook
                    Dim xlsSheet As Excel.Worksheet

                    xlsApp = New Excel.Application

                    xlsApp.Visible = False
                    xlsWB = xlsApp.Workbooks.Open(xlsTemplates & "SalesReport.xlsx")

                    xlsSheet = xlsWB.Worksheets(1)
                    xlsSheet.Unprotect("flair")

                    Dim totalSales As Integer = 0
                    Dim totalBalance As Integer = 0
                    Dim DateFrom As String = dtpickStart.Value.ToString("yyyy-MM-dd")
                    Dim ToDate As String = dtpickEnd.Value.ToString("yyyy-MM-dd")

                    xlsSheet.Cells(3, 1) = "WEEKLY DENTAL SALES REPORT"

                    xlsSheet.Cells(7, 1) = "Filter: "
                    xlsSheet.Cells(7, 2) = cmbboxProcedure.Text


                    Dim x As Integer
                    Dim currentRow As Integer = 12
                    For x = 0 To GeneratedReport.dtgridSalesReport.RowCount - 1

                        xlsSheet.Cells(currentRow, 1) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colTreatmentDate").Value.ToString
                        xlsSheet.Cells(currentRow, 2) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colPatientName").Value
                        xlsSheet.Cells(currentRow, 3) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colProcedure").Value
                        xlsSheet.Cells(currentRow, 4) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        xlsSheet.Cells(currentRow, 5) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        xlsSheet.Cells(currentRow, 6) = GeneratedReport.dtgridSalesReport.Rows(x).Cells("colLastPaymentDate").Value.ToString

                        totalSales += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colSalesAmount").Value.ToString
                        totalBalance += GeneratedReport.dtgridSalesReport.Rows(x).Cells("colBalance").Value.ToString
                        currentRow += 1

                    Next

                    xlsSheet.Cells(8, 2) = totalSales
                    xlsSheet.Cells(9, 2) = totalBalance

                    'MsgBox(totalSales)
                    'MsgBox(totalBalance)
                    'MsgBox(DateFrom)
                    'MsgBox(ToDate)

                    xlsSheet.PageSetup.LeftFooter = "Date Created: " & DateTime.Now & Chr(10) & "Generated by: " & LoginAccount.empName

                    With xlsSheet.Range("A12", "F" & currentRow - 1)
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).LineStyle = Excel.XlLineStyle.xlContinuous
                        .Borders(Excel.XlBordersIndex.xlInsideHorizontal).Weight = Excel.XlBorderWeight.xlHairline
                    End With

                    Dim myfilename As String = "WeeklyProcedureSalesReport" & DateTime.Now.ToString("MMddyy-HHmmss") & ".xlsx"
                    xlsSheet.Protect("flair")

                    xlsApp.ActiveWindow.View = Excel.XlWindowView.xlPageLayoutView
                    xlsApp.ActiveWindow.DisplayGridlines = False

                    xlsWB.SaveAs(xlsFiles & myfilename)
                    xlsApp.Quit()

                    releaseObject(xlsApp)
                    releaseObject(xlsWB)
                    releaseObject(xlsSheet)

                    'MsgBox(xlsFiles & myfilename)
                    'Dim startInfo As New ProcessStartInfo("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE")
                    'startInfo.WindowStyle = ProcessWindowStyle.Maximized
                    'startInfo.Arguments = """" & xlsFiles & myfilename & """"
                    'Process.Start(startInfo)

                    If File.Exists("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files (x86)\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    ElseIf File.Exists("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE") Then

                        Process.Start("C:\Program Files\Microsoft Office\root\Office16\EXCEL.EXE", """" & xlsFiles & myfilename & """")

                    Else

                        MessageBox.Show("Excel is not installed in this device", "Warning", MessageBoxButtons.OK, MessageBoxIcon.Exclamation)

                    End If

                End If


            End If

        End If





    End Sub

    Private Sub btnSelectDates_Click(sender As Object, e As EventArgs) Handles btnSelectDates.Click


        If grpboxDateRange.Visible = True Then
            grpboxDateRange.Visible = False

            If rbDaily.Checked = False Or rbMonthly.Checked = False Or rbWeekly.Checked = False Then

                rbDaily.Checked = True

            End If

        Else
            grpboxDateRange.Visible = True

            If rbDaily.Checked = True Or rbMonthly.Checked = True Or rbWeekly.Checked = True Then
                rbDaily.Checked = False
                rbMonthly.Checked = False
                rbWeekly.Checked = False
            End If

        End If

    End Sub

    Private Sub rb_Click(sender As Object, e As EventArgs) Handles rbWeekly.Click, rbMonthly.Click, rbDaily.Click

        If grpboxDateRange.Visible = True Then
            grpboxDateRange.Visible = False
        End If

    End Sub

    Private Sub SalesReport_Load(sender As Object, e As EventArgs) Handles Me.Load

        btnGenerateReport.Visible = True

        Try
            ConnectDatabase()
            Dim ProcTable As New DataTable
            With sqlcmd
                .Connection = DBConnection
                .CommandType = CommandType.StoredProcedure
                .CommandText = "AppProcedures"
                .Parameters.AddWithValue("@QType", "View")
                .Parameters.AddWithValue("@ProdID", "")
                .Parameters.AddWithValue("@ProdName", "")
                .Parameters.AddWithValue("@ProdDescription", "")
                .Parameters.AddWithValue("@ProdPrice", DBNull.Value)
                .Parameters.AddWithValue("@ProdCategory", "")
            End With
            myAdapter.SelectCommand = sqlcmd
            myAdapter.Fill(ProcTable)

            cmbboxProcedure.DataSource = ProcTable

            cmbboxProcedure.ValueMember = "ProcedureID"

            cmbboxProcedure.DisplayMember = "ProcedureName"

            DatabaseDisconnect()
        Catch ex As Exception
            MsgBox(ex.Message, MsgBoxStyle.Critical, "Error")
            DatabaseDisconnect()
        End Try

    End Sub

    Private Sub btnProcedureFilter_Click(sender As Object, e As EventArgs) Handles btnProcedureFilter.Click

        btnProcedureFilter.Visible = False

        lblProcedures.Visible = True
        cmbboxProcedure.Visible = True
        lblRemoveProc.Visible = True

    End Sub

    Private Sub lblRemoveProc_Click(sender As Object, e As EventArgs) Handles lblRemoveProc.Click

        lblRemoveProc.Visible = False
        cmbboxProcedure.Visible = False
        lblProcedures.Visible = False

        btnProcedureFilter.Visible = True

    End Sub


End Class